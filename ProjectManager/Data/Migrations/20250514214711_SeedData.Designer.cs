// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManager.Data;

#nullable disable

namespace ProjectManager.Data.Migrations
{
    [DbContext(typeof(ProjectManagerDbContext))]
    [Migration("20250514214711_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectManager.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 13, 14, 35, 11, 90, DateTimeKind.Utc).AddTicks(3994),
                            Description = "System zarządzania treścią w .NET dla blogów technologicznych",
                            Name = "CMS dla blogerów"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 9, 4, 59, 11, 90, DateTimeKind.Utc).AddTicks(3999),
                            Description = "Moduł zarządzania zasobami i rezerwacjami dla wypożyczalni aparatów natychmiastowych",
                            Name = "ERP dla wypożyczalni sprzętu"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 4, 12, 11, 11, 90, DateTimeKind.Utc).AddTicks(4001),
                            Description = "Aplikacja do analizy i wizualizacji wyników finansowych dla małych firm",
                            Name = "Analiza finansowa"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 11, 0, 11, 11, 90, DateTimeKind.Utc).AddTicks(4003),
                            Description = "Platforma do tworzenia i zarządzania quizami edukacyjnymi dla Funduszu Młodzieżowego",
                            Name = "System quizów edukacyjnych"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 2, 16, 59, 11, 90, DateTimeKind.Utc).AddTicks(4004),
                            Description = "System wspierający monitorowanie procesu produkcji okien z funkcją raportowania",
                            Name = "Monitoring produkcji okien"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 5, 7, 19, 23, 11, 90, DateTimeKind.Utc).AddTicks(4006),
                            Description = "Aplikacja CRM z funkcją zarządzania relacjami z klientami i automatyzacją procesów sprzedaży",
                            Name = "CRM dla małych firm"
                        });
                });

            modelBuilder.Entity("ProjectManager.Data.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTasks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Implementacja logowania i rejestracji użytkowników.",
                            DueDate = new DateTime(2025, 5, 19, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4037),
                            IsCompleted = false,
                            ProjectId = 1,
                            Title = "Stworzenie modułu autoryzacji"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Wdrożenie edytora WYSIWYG do tworzenia postów.",
                            DueDate = new DateTime(2025, 5, 22, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4040),
                            IsCompleted = false,
                            ProjectId = 1,
                            Title = "Integracja edytora tekstu"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Implementacja tagów i kategorii dla postów.",
                            DueDate = new DateTime(2025, 5, 24, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4041),
                            IsCompleted = true,
                            ProjectId = 1,
                            Title = "Dodanie funkcji tagowania"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Przygotowanie testów jednostkowych dla CRUD postów.",
                            DueDate = new DateTime(2025, 5, 26, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4042),
                            IsCompleted = false,
                            ProjectId = 1,
                            Title = "Testy jednostkowe modułu postów"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Zoptymalizowanie zapytań SQL dla modułu postów.",
                            DueDate = new DateTime(2025, 5, 29, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4044),
                            IsCompleted = false,
                            ProjectId = 1,
                            Title = "Optymalizacja bazy danych"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Implementacja formularza rezerwacji sprzętu.",
                            DueDate = new DateTime(2025, 5, 21, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4046),
                            IsCompleted = false,
                            ProjectId = 2,
                            Title = "Stworzenie modułu rezerwacji"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Wdrożenie funkcji generowania faktur po zakończeniu wypożyczenia.",
                            DueDate = new DateTime(2025, 5, 24, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4047),
                            IsCompleted = true,
                            ProjectId = 2,
                            Title = "Generowanie faktur"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Podłączenie bramki płatności Stripe.",
                            DueDate = new DateTime(2025, 5, 26, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4049),
                            IsCompleted = false,
                            ProjectId = 2,
                            Title = "Integracja płatności online"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Przeprowadzenie testów end-to-end dla modułu rezerwacji.",
                            DueDate = new DateTime(2025, 5, 28, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4050),
                            IsCompleted = false,
                            ProjectId = 2,
                            Title = "Testy funkcjonalne modułu wypożyczeń"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Wygenerowanie raportów o najczęściej wypożyczanym sprzęcie.",
                            DueDate = new DateTime(2025, 6, 3, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4052),
                            IsCompleted = false,
                            ProjectId = 2,
                            Title = "Analiza danych użytkowników"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Stworzenie modułu importu danych z plików CSV.",
                            DueDate = new DateTime(2025, 5, 17, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4053),
                            IsCompleted = false,
                            ProjectId = 3,
                            Title = "Zaimportowanie danych finansowych"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Implementacja dashboardu z wizualizacją danych.",
                            DueDate = new DateTime(2025, 5, 20, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4054),
                            IsCompleted = false,
                            ProjectId = 3,
                            Title = "Tworzenie dashboardu"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Poprawa wydajności analizy danych finansowych.",
                            DueDate = new DateTime(2025, 5, 23, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4055),
                            IsCompleted = true,
                            ProjectId = 3,
                            Title = "Optymalizacja algorytmu analizy danych"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Generowanie raportu finansowego w formacie PDF.",
                            DueDate = new DateTime(2025, 5, 26, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4057),
                            IsCompleted = false,
                            ProjectId = 3,
                            Title = "Tworzenie raportu PDF"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Napisanie testów jednostkowych dla modułu analizy finansowej.",
                            DueDate = new DateTime(2025, 5, 29, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4058),
                            IsCompleted = false,
                            ProjectId = 3,
                            Title = "Testy jednostkowe dla algorytmu analizy"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Implementacja formularza dodawania nowego quizu.",
                            DueDate = new DateTime(2025, 5, 19, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4059),
                            IsCompleted = false,
                            ProjectId = 4,
                            Title = "Tworzenie formularza quizu"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Zaimportowanie zestawu pytań z pliku CSV.",
                            DueDate = new DateTime(2025, 5, 22, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4060),
                            IsCompleted = true,
                            ProjectId = 4,
                            Title = "Stworzenie bazy pytań"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Testowanie quizów w trybie użytkownika.",
                            DueDate = new DateTime(2025, 5, 24, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4062),
                            IsCompleted = false,
                            ProjectId = 4,
                            Title = "Testy funkcjonalne quizów"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Implementacja modułu wyników z oceną quizu.",
                            DueDate = new DateTime(2025, 5, 28, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4063),
                            IsCompleted = false,
                            ProjectId = 4,
                            Title = "Dodanie wyników quizu"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Poprawienie wydajności zapytań do bazy quizów.",
                            DueDate = new DateTime(2025, 6, 1, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4064),
                            IsCompleted = false,
                            ProjectId = 4,
                            Title = "Optymalizacja bazy danych quizów"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Implementacja funkcji raportowania produkcji.",
                            DueDate = new DateTime(2025, 5, 21, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4066),
                            IsCompleted = false,
                            ProjectId = 5,
                            Title = "Integracja modułu raportowania"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Testowanie generowanych raportów produkcyjnych.",
                            DueDate = new DateTime(2025, 5, 24, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4067),
                            IsCompleted = true,
                            ProjectId = 5,
                            Title = "Testy modułu raportowania"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Wdrożenie systemu powiadomień o błędach produkcji.",
                            DueDate = new DateTime(2025, 5, 27, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4068),
                            IsCompleted = false,
                            ProjectId = 5,
                            Title = "Powiadomienia o błędach"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Dodanie wykresu produkcji na dashboardzie.",
                            DueDate = new DateTime(2025, 5, 30, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4069),
                            IsCompleted = false,
                            ProjectId = 5,
                            Title = "Wizualizacja produkcji w czasie rzeczywistym"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Sprawdzenie bezpieczeństwa danych produkcyjnych.",
                            DueDate = new DateTime(2025, 6, 3, 21, 47, 11, 90, DateTimeKind.Utc).AddTicks(4070),
                            IsCompleted = false,
                            ProjectId = 5,
                            Title = "Audyt bezpieczeństwa danych"
                        });
                });

            modelBuilder.Entity("ProjectManager.Data.Models.ProjectTask", b =>
                {
                    b.HasOne("ProjectManager.Data.Models.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectManager.Data.Models.Project", b =>
                {
                    b.Navigation("ProjectTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
